name: CI/CD Hotel Ops Demo

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin123
          POSTGRES_DB: admin
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U admin"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      zookeeper:
        image: wurstmeister/zookeeper
        ports:
          - 2181:2181

      kafka:
        image: confluentinc/cp-kafka:7.6.0
        ports:
          - 9092:9092
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,EXTERNAL://localhost:9092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        options: >-
          --health-cmd "echo 'Kafka ready'"
          --health-interval 10s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install wait-on
        run: npm install --save-dev wait-on

      - name: Install backend deps
        run: |
          cd backend
          npm ci

      - name: Build backend
        run: |
          cd backend
          npm run build

      - name: Start backend
        run: |
          cd backend
          npm run start &

      - name: Wait for backend GraphQL to be ready
        run: |
          npx wait-on http://localhost:8080/graphql

      - name: Run backend tests
        run: |
          cd backend
          npm run test --if-present

      - name: Build frontend
        run: |
          cd frontend/react-app
          npm ci
          npm run build

      - name: Run E2E tests
        run: |
          npm run test:e2e