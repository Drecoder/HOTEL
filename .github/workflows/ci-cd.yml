name: CI/CD Hotel Ops

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # ------------------------------
  # 1️⃣ Backend Tests
  # ------------------------------
  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin123
          POSTGRES_DB: admin
        options: >-
          --health-cmd "pg_isready -U admin"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # ------------------------------
      # Cache backend Node modules
      # ------------------------------
      - name: Cache backend Node modules
        uses: actions/cache@v3
        with:
          path: apps/backend/node_modules
          key: ${{ runner.os }}-backend-node-${{ hashFiles('apps/backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-node-

      # ------------------------------
      # Install, Build & Test Backend
      # ------------------------------
      - name: Install backend deps
        run: npm ci
        working-directory: apps/backend

      - name: Build backend
        run: npm run build
        working-directory: apps/backend

      - name: Mock Kafka for backend
        run: |
          echo 'jest.mock("../../src/kafka/kafka.service", () => ({
            KafkaService: jest.fn().mockImplementation(() => ({
              emit: jest.fn().mockResolvedValue(true),
              send: jest.fn().mockResolvedValue(true),
            })),
          }));' > apps/backend/jest.setup.ts

      - name: Start backend
        run: npm run start &
        working-directory: apps/backend

      - name: Wait for backend GraphQL
        run: npx wait-on http://localhost:8080/graphql

      - name: Run backend tests
        run: npm run test --if-present
        working-directory: apps/backend

  # ------------------------------
  # 2️⃣ Frontend E2E Tests
  # ------------------------------
  frontend-e2e:
    runs-on: ubuntu-latest
    needs: backend-tests

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # ------------------------------
      # Cache frontend Node modules
      # ------------------------------
      - name: Cache frontend Node modules
        uses: actions/cache@v3
        with:
          path: apps/frontend/react-app/node_modules
          key: ${{ runner.os }}-frontend-node-${{ hashFiles('apps/frontend/react-app/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-node-
