name: CI/CD Hotel Ops

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # ------------------------------
  # 1️⃣ Backend Tests
  # ------------------------------
  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin123
          POSTGRES_DB: admin
        options: >-
          --health-cmd "pg_isready -U admin"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # ------------------------------
      # Cache all Node modules globally
      # ------------------------------
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: |
            backend/node_modules
            frontend/react-app/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # ------------------------------
      # Backend Build & Mock Kafka
      # ------------------------------
      - name: Install backend deps
        run: |
          cd backend
          npm ci

      - name: Build backend
        run: |
          cd backend
          npm run build

      - name: Mock Kafka for backend
        run: |
          echo "jest.mock('../../src/kafka/kafka.service', () => ({ KafkaService: jest.fn().mockImplementation(() => ({ emit: jest.fn().mockResolvedValue(true), send: jest.fn().mockResolvedValue(true), })), }));" > backend/jest.setup.ts

      - name: Start backend
        run: |
          cd backend
          npm run start &

      - name: Wait for backend GraphQL
        run: npx wait-on http://localhost:8080/graphql

      - name: Run backend tests
        run: |
          cd backend
          npm run test --if-present

  # ------------------------------
  # 2️⃣ Frontend E2E Tests (Mocked Kafka)
  # ------------------------------
  frontend-e2e:
    runs-on: ubuntu-latest
    needs: backend-tests

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Restore Node modules from cache
        run: echo "Node modules already cached globally"

      - name: Install frontend deps and build
        run: |
          cd frontend/react-app
          npm ci
          npm run build

      - name: Run frontend E2E tests
        run: |
          cd frontend/react-app
          npm run test:e2e
