name: CI/CD Hotel Ops

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # ------------------------------
  # Backend Tests (Mock Kafka)
  # ------------------------------
  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: 123password
          POSTGRES_DB: hotel
        options: >-
          --health-cmd "pg_isready -U admin"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install backend deps
        run: npm ci
        working-directory: apps/backend

      - name: Mock Kafka for backend
        run: |
          echo "jest.mock('../../src/kafka/kafka.service', () => ({
            KafkaService: jest.fn().mockImplementation(() => ({
              emit: jest.fn().mockResolvedValue(true),
              send: jest.fn().mockResolvedValue(true),
            })),
          }));" > apps/backend/jest.setup.ts

      - name: Build backend
        run: npm run build:backend
        working-directory: apps/backend

      - name: Run backend tests
        run: npm run test --if-present
        working-directory: apps/backend

  # ------------------------------
  # Frontend E2E Tests
  # ------------------------------
  frontend-e2e:
    runs-on: ubuntu-latest
    needs: backend-tests

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install frontend deps
        run: npm ci
        working-directory: apps/frontend

      - name: Build frontend
        run: npm run build
        working-directory: apps/frontend

      - name: Run frontend E2E tests
        run: npm run test:e2e
        working-directory: apps/frontend
