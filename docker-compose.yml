services:
  # -------------------------------
  # 1. PostgreSQL
  # -------------------------------
  postgres:
    image: postgres:15
    container_name: hotel-ops-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hotel
    volumes:
       - ./apps/db-init/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5

  # -------------------------------
  # 2. Redis
  # -------------------------------
  redis:
    image: redis:7
    container_name: hotel-ops-redis
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5

  # -------------------------------
  # 3. Zookeeper (Kafka dependency)
  # -------------------------------
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: hotel-ops-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888

  # -------------------------------
  # 4. Kafka
  # -------------------------------
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    container_name: hotel-ops-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # -------------------------------
  # 5. Backend
  # -------------------------------
  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    container_name: hotel-ops-backend
    ports:
      - "8080:8080"
    environment:
      NODE_ENV: development
      DB_USER: admin
      DB_PASSWORD: 123password
      DB_NAME: hotel
      DB_PORT: 5432
      DB_HOST: localhost
      KAFKA_BROKER: kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka

  # -------------------------------
  # 6. Frontend
  # -------------------------------
  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    container_name: hotel-ops-frontend
    ports:
      - "3000:5173"
    depends_on:
      - backend
